{
    "name": "tables",
    "doc_namespace": "doc",
    "doc_class": "doc",
    "references": [
        "doc.index"
    ],
    "data": {
        "body": "[title Moya Tables]\n\nMoya Tables supplies a system of widgets for rendering tables in content definitions.\n\n[h1]Installation[/h1]\n\nMoya Tables is built in to Moya and may be imported via its Python path as follows:\n\n[code xml]\n<import py=\"moya.libs.tables\" />\n[/code]\n\nYou can install this library with the following:\n\n[code xml]\n<install name=\"tables\" lib=\"moya.tables\" />\n[/code]\n\nYou won't need to mount Moya Tables, because there are no views. However, there is a test page, which you may mount as follows:\n\n[code xml]\n<mount app=\"tables\" mountpoint=\"test\" mount=\"/tables/\"/>\n[/code]\n\n\n[h1]Namespace[/h1]\n\nMoya Tables uses the namespace [c]http://moyaproject.com/tables[/c].\n\n[h1]Introduction[/h1]\n\nIt is entirely possible to generate HTML tables in templates [i]without[/i] using this library. The main advantage of Moya Tables is that table cells may contain arbitrary content, which may be difficult to manage with an HTML tag soup.\n\n[h1]Widgets[/h1]\n\nA [tag tables]table[/tag] defines a table in a content definition. For example:\n\n[code xml]\n<table xmlns=\"http://moyaproject.com/tables\">\n    <!-- table contents go here -->\n</table>\n[/code]\n\nTo define the columns in a table, add a [tag tables]columns[/tag] tag inside the [tag tables]table[/tag].\n\nThe [tag tables]columns[/tag] tag should contain a number of [tag tables]header[/tag] tags which define a header for each column in the table. For example, the following creates a table with two columns:\n\n[code xml]\n<table xmlns=\"http://moyaproject.com/tables\">\n    <columns>\n        <header>Product</header>\n        <header>Stock</header>\n    </columns>\n</table>\n[/code]\n\nTo define the rows for the tables add a [tag tables]rows[/tag] tag containing a [tag tables]row[/tag] tag for each row. The [tag tables]row[/tag] tags should themselves contain a [tag tables]cell[/tag] for each column. A cell may contain simple text, or any other content tags; images, forms, alerts etc. Here's an example:\n\n[code xml]\n<table xmlns=\"http://moyaproject.com/tables\">\n    <columns>\n        <header>Product</header>\n        <header>Stock</header>\n    </columns>\n    <rows>\n        <row>\n            <cell>Salmon Nigiri Bento</cell>\n            <cell>4</cell>\n        </row>\n        <row>\n            <cell>Mixed Sushi Bento</cell>\n            <cell>2</cell>\n        </row>\n    </rows>\n</table>\n[/code]\n\nThis will create a table with two rows.\n\nWhile it is possible to add each row individually, it is more common to generate the rows from a sequence, such as a database query. In this case you can supply a [c]src[/c] attribute to the [tag tables]rows[/tag] tag, which contains the object to iterate over.\n\nHere's an example which generates the rows from a queryset called [c]products[/c]:\n\n[code xml]\n<table xmlns=\"http://moyaproject.com/tables\">\n    <columns>\n        <header>Product</header>\n        <header>Stock</header>\n    </columns>\n    <rows src=\"products\" dst=\"product\">\n        <cell>${product.name}</cell>\n        <cell>${product.stock}</cell>\n    </rows>\n</table>\n[/code]\n\nNote that when you use the [c]src[/c] attribute in this way, Moya inserts the rows automatically -- so you won't need to add [tag tables]row[/tag] tags\n\n[h2]Table Style[/h2]\n\nYou can set a CSS style on your [tag tables]table[/tag] with the [c]class[/c] attribute. You will probably want to do this if you are using Bootstrap CSS, which doesn't apply any particular style to a table unless it has the class [c]\"table\"[/c]. Here's an example:\n\n[code xml]\n<table xmlns=\"http://moyaproject.com/tables\" style=\"table table-striped\">\n    <columns>\n        <header>Product</header>\n        <header>Stock</header>\n    </columns>\n    <rows src=\"products\" dst=\"product\">\n        <cell>${product.name}</cell>\n        <cell>${product.stock}</cell>\n    </rows>\n</table>\n[/code]\n\n[h2]Sortable Columns[/h2]\n\nYou may generate a clickable header that adds sort information to the query string, with the [tag tables]sort-header[/tag]. Here's an example:\n\n[code xml]\n<table xmlns=\"http://moyaproject.com/tables\">\n    <columns>\n        <sort-header name=\"product\">Product</sort-header>\n        <sort-header name=\"stock\">Stock</sort-header>\n    </columns>\n    <rows src=\"products\" dst=\"product\">\n        <cell>${product.name}</cell>\n        <cell>${product.stock}</cell>\n    </rows>\n</table>\n[/code]\n\nThis makes both column headers clickable. If you click the Product header, it will link to the same page, with the query string [c]sort=product&order=asc[/c]. If you click on the header again it will toggle the [c]order[/c] value between [c]asc[/c] and [c]desc[/c] (for [i]ascending[/i] and [i]descending[/i] order).\n\nYou will still need to implement sorting in the view that gets the products. The sort and order values can be looked up with [c].request.GET.sort[/c] and [c].request.GET.order[/c].\n\n[h1]Customization[/h1]\n\nYou may customize the various components of a table individually with the [c]template[/c] attribute on the tags, [i]or[/i] project-wide by overriding the template in your project.\n\nTable templates are stored in the template filesystem, in the [c]/moya.tables/[/c] directory. You may list them with the following command:\n\n[code xml]\n$ moya fs templates --tree moya.tables\n[/code]\n\nIt is also possible to mix table tags with other content tags. For example, if you want to render a template for each row rather than define the cells individually. Here's how you might do that:\n\n[code xml]\n<table xmlns=\"http://moyaproject.com/tables\">\n    <columns>\n        <sort-header name=\"product\">Product</sort-header>\n        <sort-header name=\"stock\">Stock</sort-header>\n    </columns>\n    <rows>\n        <moya:node template=\"/sushifinder/table/rows.html\" let:products=\"products\"/>\n    </rows>\n</table>\n[/code]\n\nThe template equivelent of the preceding examples would be something like the following:\n\n[code moyatemplate]\n{% for product in products %}\n<tr>\n    <td>${product.name}</td>\n    <td>${product.stock}</td>\n</tr>\n{% endfor %}\n[/code]",
        "name": "tables",
        "docmap": [
            [
                1,
                "Installation"
            ],
            [
                1,
                "Namespace"
            ],
            [
                1,
                "Introduction"
            ],
            [
                1,
                "Widgets"
            ],
            [
                2,
                "Table Style"
            ],
            [
                2,
                "Sortable Columns"
            ],
            [
                1,
                "Customization"
            ]
        ],
        "title": "Moya Tables"
    },
    "id": "doc.tables"
}